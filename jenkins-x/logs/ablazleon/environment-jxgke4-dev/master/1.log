
Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-credential-initializer-lq4l2[0m
{"level":"info","ts":1593098201.888835,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1593098201.890141,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-working-dir-initializer-cm5g2[0m
{"level":"info","ts":1593098202.952142,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1593098202.9554317,"logger":"fallback-logger","caller":"bash/main.go:64","msg":"Successfully executed command \"sh -c mkdir -p /workspace/source\"; output "}

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-place-tools[0m

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-git-source-ablazleon-environment-jxgke4-de-4nrvz-9sg2h[0m
{"level":"info","ts":1593098217.3741481,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1593098218.5610542,"logger":"fallback-logger","caller":"git/git.go:103","msg":"Successfully cloned https://github.com/*********/environment-**gke4-dev.git @ v0.0.1 in path /workspace/source"}

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-setup-builder-home[0m

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:345af710ae74fcc65144627e95e79f762dd028da
WARNING: no SHAs to merge, falling back to initial cloned commit

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-validate-git[0m
Git configured for user: jenkins-x-bot and email jenkins-x@googlegroups.com

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-verify-preinstall[0m
no need to reconnect to cluster
writing the following to the OWNERS file for the development environment repository:
approvers:
- *********
reviewers:
- *********
WARNING: TLS is not enabled so your webhooks will be called using HTTP. This means your webhook secret will be sent to your cluster in the clear. See https://jenkins-x.io/docs/getting-started/setup/boot/#ingress for more information
Verifying the kubernetes cluster before we try to boot Jenkins X in namespace: **
Trying to lazily create any missing resources to get the current cluster ready to boot Jenkins X
Verifying Ingress...
Clearing the domain 34.90.4.33.nip.io as when using auto-DNS domains we need to regenerate to ensure its always accurate in case the cluster or ingress service is recreated

Using namespace '**' from context named '' on server ''.

Installing kubectl
Downloading https://storage.googleapis.com/kubernetes-release/release/v1.13.2/bin/linux/amd64/kubectl to /builder/home/.**/bin/kubectl...
Downloaded /builder/home/.**/bin/kubectl
Installing helm
Downloading https://get.helm.sh/helm-v2.12.2-linux-amd64.tar.gz to /builder/home/.**/bin/helm.tgz...
Downloaded /builder/home/.**/bin/helm.tgz
Installing helm secrets plugin
Verifying the CLI packages using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: v1.0.512
WARNING: ** version specified in the version stream /builder/home/.**/jenkins-x-versions is 2.1.82. You are using 2.1.84. We highly recommend you upgrade versionstream ref
CLI packages kubectl, git, helm seem to be setup correctly
NAME                          VERSION
Kubernetes cluster            v1.14.10-gke.36
kubectl (installed in JX_BIN) v1.13.2
helm client                   2.12.2
git                           2.21.1

Verifying Storage...
WARNING: Your requirements have not enabled cloud storage for logs - we recommend enabling this for kubernetes provider gke
WARNING: Your requirements have not enabled cloud storage for reports - we recommend enabling this for kubernetes provider gke
WARNING: Your requirements have not enabled cloud storage for repository - we recommend enabling this for kubernetes provider gke
WARNING: Your requirements have not enabled cloud storage for backup - we recommend enabling this for kubernetes provider gke
Storage configuration looks good

Helm installed and configured
Ensuring Helm chart repository https://storage.googleapis.com/chartmuseum.jenkins-x.io is configured
Validating Kaniko secret in namespace **

verified there is a ConfigMap config in namespace **
verified there is a ConfigMap plugins in namespace **
Cluster looks good, you are ready to '** boot' now!


Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-jx-crds[0m
Jenkins X CRDs upgraded with success

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-velero[0m
Modified file /workspace/source/systems/velero/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-velero
lock configmap **-lock-velero created
cleaning the lock configmap **-lock-velero

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-velero-backups[0m
Modified file /workspace/source/systems/velero-backups/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-velero
lock configmap **-lock-velero created
Ignoring templates/default-backup.yaml
No requirements file: /tmp/**-helm-apply-770394646/velero-backups/requirements.yaml so not checking for missing versions
cleaning the lock configmap **-lock-velero

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-nginx-controller[0m
Modified file /workspace/source/systems/**ing/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-kube-system
lock configmap **-lock-kube-system created

cleaning the lock configmap **-lock-kube-system

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-create-install-values[0m
Waiting to find the external host name of the ingress controller Service in namespace kube-system with name **ing-nginx-ingress-controller
No domain flag provided so using default 34.90.4.33.nip.io to generate Ingress rules
defaulting the domain to 34.90.4.33.nip.io and modified /workspace/source/**-requirements.yml

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-external-dns[0m
Modified file /workspace/source/systems/external-dns/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Adding missing Helm repo: charts.bitnami.com https://charts.bitnami.com/bitnami
Successfully added Helm repository charts.bitnami.com.
cleaning the lock configmap **-lock-**

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-cert-manager-crds[0m
customresourcedefinition.apiextensions.k8s.io/challenges.acme.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/orders.acme.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/certificaterequests.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/certificates.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/clusterissuers.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/issuers.cert-manager.io configured

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-cert-manager[0m
Modified file /workspace/source/systems/cm/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-cert-manager
lock configmap **-lock-cert-manager created
Adding missing Helm repo: charts.jetstack.io https://charts.jetstack.io
Successfully added Helm repository charts.jetstack.io.
cleaning the lock configmap **-lock-cert-manager

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-acme-issuer-and-certificate[0m
Modified file /workspace/source/systems/acme/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Ignoring templates/cert-manager-prod-certificate.yaml
Ignoring templates/cert-manager-prod-issuer.yaml
Ignoring templates/cert-manager-staging-certificate.yaml
Ignoring templates/cert-manager-staging-issuer.yaml
No requirements file: /tmp/**-helm-apply-585213720/acme/requirements.yaml so not checking for missing versions
cleaning the lock configmap **-lock-**

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-vault[0m
Not attempting to boot Vault as using secret storage: local

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-create-helm-values[0m
defaulting to secret storage scheme local found from requirements file at /workspace/source/**-requirements.yml
defaulting to secret base path to the cluster name **gke4 found from requirements file at /workspace/source/**-requirements.yml
generated schema file /workspace/source/env/parameters.schema.json from template /workspace/source/env/parameters.tmpl.schema.json
Jenkins X Admin Username ***** [Automatically accepted existing value]
Jenkins X Admin Password *** [Automatically accepted existing value]
Pipeline bot Git username ********* [Automatically accepted existing value]
Pipeline bot Git email address *********@gmail.com [Automatically accepted existing value]
Pipeline bot Git token *** [Automatically accepted existing value]
HMAC token, used to validate incoming webhooks. Press enter to use the generated token *** [Automatically accepted existing value]
Do you want to configure non default Docker Registry? false [Automatically accepted existing value]

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-create-jx-auth-config[0m
Saved the rendered configuration into templates/**-auth-configmap.yaml file

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-jx-auth-config[0m
Modified file /workspace/source/systems/**-auth/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Ignoring templates/**-auth-configmap.yaml
No requirements file: /tmp/**-helm-apply-420868733/**-auth/requirements.yaml so not checking for missing versions
cleaning the lock configmap **-lock-**

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-jenkins-x[0m
Modified file /workspace/source/env/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Ignoring templates/.gitignore
Applying the kubernetes overrides at ../kubeProviders/gke/values.tmpl.yaml
Adding missing Helm repo: chartmuseum.jenkins-x.io http://chartmuseum.jenkins-x.io
Successfully added Helm repository chartmuseum.jenkins-x.io.

cleaning the lock configmap **-lock-**

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-verify-jenkins-x-environment[0m
Storing the requirements in team settings in the dev environment
Validating git repository for dev environment at URL https://github.com/*********/environment-**gke4-dev.git
Validating git repository for production environment at URL https://github.com/*********/environment-**gke4-production.git
Using Git provider github at https://github.com
? Using Git user name: *********
? Using organisation: *********
Creating repository *********/environment-**gke4-production
Git repository *********/environment-**gke4-production already exists
Pushed Git repository to https://github.com/*********/environment-**gke4-production

Validating git repository for staging environment at URL https://github.com/*********/environment-**gke4-staging.git
Using Git provider github at https://github.com
? Using Git user name: *********
? Using organisation: *********
Creating repository *********/environment-**gke4-staging
Git repository *********/environment-**gke4-staging already exists
Pushed Git repository to https://github.com/*********/environment-**gke4-staging

Environment git repositories look good


Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-repositories[0m
Modified file /workspace/source/repositories/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Ignoring templates/*********-mynode**-sr.yaml
Ignoring templates/default-group.yaml
No requirements file: /tmp/**-helm-apply-618336176/repositories/requirements.yaml so not checking for missing versions
WARNING: No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: jenkins-x-chartmuseum http://jenkins-x-chartmuseum:8080
Successfully added Helm repository jenkins-x-chartmuseum.

cleaning the lock configmap **-lock-**

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-install-pipelines[0m

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-update-webhooks[0m
DEBUG: Finding service url for hook in namespace **
DEBUG: Couldn't find service url, attempting to look up via ingress
DEBUG: found service url http://hook-**.34.90.4.33.nip.io
Updating webhooks for Owner: ********* and Repository: environment-**gke4-dev in git server: https://github.com
Checking hooks for repository *********/environment-**gke4-dev with user *********
Found matching hook for url http://hook-**.34.90.4.33.nip.io/hook
Updating GitHub webhook for *********/environment-**gke4-dev for url http://hook-**.34.90.4.33.nip.io/hook
Updating webhooks for Owner: ********* and Repository: environment-**gke4-production in git server: https://github.com
Checking hooks for repository *********/environment-**gke4-production with user *********
Found matching hook for url http://hook-**.34.90.4.33.nip.io/hook
Updating GitHub webhook for *********/environment-**gke4-production for url http://hook-**.34.90.4.33.nip.io/hook
Updating webhooks for Owner: ********* and Repository: environment-**gke4-staging in git server: https://github.com
Checking hooks for repository *********/environment-**gke4-staging with user *********
Found matching hook for url http://hook-**.34.90.4.33.nip.io/hook
Updating GitHub webhook for *********/environment-**gke4-staging for url http://hook-**.34.90.4.33.nip.io/hook
Updating webhooks for Owner: ********* and Repository: mynode** in git server: https://github.com
Checking hooks for repository *********/mynode** with user *********
Found matching hook for url http://hook-**.34.90.4.33.nip.io/hook
Updating GitHub webhook for *********/mynode** for url http://hook-**.34.90.4.33.nip.io/hook

Showing logs for build [32mablazleon-environment-jxgke4-de-4nrvz-1[0m stage [32mrelease[0m and container [32mstep-verify-installation[0m
verifying the Jenkins X installation in namespace **
verifying pods
Checking pod statuses
POD                                         STATUS
jenkins-x-chartmuseum-d87cbb789-rmxlv       Running
jenkins-x-controllerbuild-75f5955f94-lx5k7  Running
jenkins-x-controllerrole-6c9d697cb5-qxpd2   Running
jenkins-x-heapster-54bdffbc79-wmd4x         Running
jenkins-x-nexus-b69b7745b-th5tq             Running
lighthouse-foghorn-84cdc48fb4-xfvjs         Running
lighthouse-keeper-75cdbd949d-xpghg          Running
lighthouse-webhooks-7f4f57cbcc-l44v5        Running
lighthouse-webhooks-7f4f57cbcc-lmbf9        Running
tekton-pipelines-controller-88c7cd9d5-4dn9v Running
Verifying the git config
Verifying username ********* at git server github at https://github.com
Found 0 organisations in git server https://github.com: 
Validated pipeline user ********* on git server https://github.com
Git tokens seem to be setup correctly
Installation is currently looking: GOOD
